name: Backend Deploy to GCP VM

on:
  push:
    branches: [main]
    paths:
      - 'buddy/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        working-directory: ./buddy
        run: docker build -t buddy-app:latest .

      - name: Save & compress Docker image
        run: docker save buddy-app:latest | gzip > buddy.tar.gz

      # üîê ÏõêÎ¨∏ SSH Í∞úÏù∏ÌÇ§(ÏãúÌÅ¨Î¶ø) ‚Üí ÌååÏùº Ï†ÄÏû• + CRLF Ï†ïÍ∑úÌôî + Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨ ‚Üí key_path Ï∂úÎ†•
      - name: Write SSH key (raw ‚Üí file) normalize and validate
        id: write_key
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$GITHUB_WORKSPACE/.ssh"
          KEY="$GITHUB_WORKSPACE/.ssh/id_ed25519"

          # 1) ÏãúÌÅ¨Î¶ø(ÏõêÎ¨∏ ÌÇ§; BEGIN/END Ìè¨Ìï®)ÏùÑ Í∑∏ÎåÄÎ°ú ÌååÏùºÏóê ÏîÄ
          cat > "$KEY" <<'__RAWKEY__'
          ${{ secrets.GCP_VM_SSH_KEY }}
          __RAWKEY__

          # 2) ÏúàÎèÑÏö∞ Í∞úÌñâ(CRLF) Ï†úÍ±∞
          sed -i 's/\r$//' "$KEY"

          # 3) Í∂åÌïú
          chmod 600 "$KEY"

          # 4) Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨ (Ïó¨Í∏∞ÏÑú Ïã§Ìå®ÌïòÎ©¥ ÏãúÌÅ¨Î¶ø ÎÇ¥Ïö©Ïù¥ ÏûòÎ™ªÎêú Í≤É)
          head -n1 "$KEY"
          tail -n1 "$KEY"
          ssh-keygen -y -f "$KEY" > "$GITHUB_WORKSPACE/.ssh/id_ed25519.pub"

          # 5) key_pathÎ°ú Ï†ÑÎã¨
          echo "KEY_PATH=$KEY" >> "$GITHUB_OUTPUT"

      - name: Prepare target dir on VM
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          port: ${{ secrets.GCP_VM_SSH_PORT || 22 }}
          key_path: ${{ steps.write_key.outputs.KEY_PATH }}
          script: |
            set -e
            mkdir -p ~/buddy

      - name: Upload image tar to GCP VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          port: ${{ secrets.GCP_VM_SSH_PORT || 22 }}
          key_path: ${{ steps.write_key.outputs.KEY_PATH }}
          source: buddy.tar.gz
          target: ~/buddy
          overwrite: true
          timeout: 60s
          command_timeout: 60s

      - name: Load & run container
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          port: ${{ secrets.GCP_VM_SSH_PORT || 22 }}
          key_path: ${{ steps.write_key.outputs.KEY_PATH }}
          script: |
            set -euo pipefail
            cd ~/buddy
            gunzip -c buddy.tar.gz | docker load
            docker rm -f buddy-app || true
            docker run -d \
              --name buddy-app \
              --restart unless-stopped \
              -p 8000:8000 \
              -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
              -e SECRET_KEY="${{ secrets.SECRET_KEY }}" \
              -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
              buddy-app:latest
            docker image prune -f || true

      # (ÏÑ†ÌÉù) Ìó¨Ïä§Ï≤¥ÌÅ¨: ÏóîÎìúÌè¨Ïù∏Ìä∏Ïóê ÎßûÍ≤å ÏàòÏ†ï
      # - name: Health check
      #   uses: appleboy/ssh-action@v1.0.0
      #   with:
      #     host: ${{ secrets.GCP_VM_IP }}
      #     username: ${{ secrets.GCP_VM_USER }}
      #     port: ${{ secrets.GCP_VM_SSH_PORT || 22 }}
      #     key_path: ${{ steps.write_key.outputs.KEY_PATH }}
      #     script: |
      #       set -e
      #       curl -fsS http://localhost:8000/health || (docker logs --tail 200 buddy-app && exit 1)
