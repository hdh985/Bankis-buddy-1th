name: Backend Deploy to GCP VM

on:
  push:
    branches: [main]
    paths:
      - 'buddy/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        working-directory: ./buddy
        run: |
          docker build -t buddy-app:latest .

      - name: Save & compress Docker image
        run: |
          docker save buddy-app:latest | gzip > buddy.tar.gz

      - name: Prepare target dir on VM
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          port: ${{ secrets.GCP_VM_SSH_PORT || 22 }}
          key: ${{ secrets.GCP_VM_SSH_KEY }}               # 🔑 개인키 원문(멀티라인)
          # passphrase: ${{ secrets.GCP_VM_SSH_PASSPHRASE }} # 사용했다면 추가
          script: |
            set -e
            mkdir -p ~/buddy

      - name: Upload image tar to GCP VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          port: ${{ secrets.GCP_VM_SSH_PORT || 22 }}
          key: ${{ secrets.GCP_VM_SSH_KEY }}               # 🔑
          # passphrase: ${{ secrets.GCP_VM_SSH_PASSPHRASE }}
          source: buddy.tar.gz
          target: ~/buddy
          overwrite: true
          timeout: 60s
          command_timeout: 60s

      - name: Load & run container
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          port: ${{ secrets.GCP_VM_SSH_PORT || 22 }}
          key: ${{ secrets.GCP_VM_SSH_KEY }}               # 🔑
          # passphrase: ${{ secrets.GCP_VM_SSH_PASSPHRASE }}
          script: |
            set -euo pipefail
            cd ~/buddy
            gunzip -c buddy.tar.gz | docker load
            docker rm -f buddy-app || true
            docker run -d \
              --name buddy-app \
              --restart unless-stopped \
              -p 8000:8000 \
              -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
              -e SECRET_KEY="${{ secrets.SECRET_KEY }}" \
              -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
              buddy-app:latest
            docker image prune -f || true
